@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}
/*
 ----------Usage-----------
 input,  
 textarea {  
    @include input-placeholder {
        color: $grey;
    }
}
*/

@mixin messageBox($class) {
  $alertClass: "error";
  .message-#{$class} {
    @content;
  }
}

//Responsive Breakpoints
$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}
/*
 ----------Usage-----------
.site-header {
    padding: 2rem;
    @include mq('tablet-wide') {
        padding-top: 4rem;
        font-size: 2.4rem;
    }
}
*/



@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
	@include pseudo($pos: $position);
	width: 0;
	height: 0;

	@if $round {
		border-radius: 3px;
	}

	@if $direction == down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - round( $size / 2.5 );
	} @else if $direction == up {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
		margin-bottom: 0 - round( $size / 2.5 );
	} @else if $direction == right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		margin-right: -$size;
	} @else if  $direction == left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		margin-left: -$size;
	}
}
/*
	----------Usage-----------
	.element {
		&::before {
			@include css-triangle(blue, down);
		}
	}
*/

@mixin prefix($property, $value, $vendors: webkit moz ms o, $default: true) {
    @if $vendors {
      @each $vendor in $vendors {
        #{"-" + $vendor + "-" + $property}: #{$value};
      }
    }
    @if $default {
      #{$property}: #{$value};
    }
}

/*
	----------Usage-----------
	.html {
        @include prefix('box-sizing', 'border-box', moz webkit);
    }
*/


@mixin screen($size) {
    $desktop: "(min-width: 1024px)";
    $tablet: "(min-width: 768px) and (max-width: 1023px)";
    $mobile: "(max-width: 767px)";
    @if $size == desktop {
      @media only screen and #{$desktop} {
        @content;
      }
    }
    @else if $size == tablet {
      @media only screen and #{$tablet} {
        @content;
      }
    }
    @else if $size == mobile {
      @media only screen and #{$mobile} {
        @content;
      }
    }
    @else {
      @media only screen and #{$size} {
        @content;
      }
    }
  }
  
/*
----------Usage-----------
  .wrapper {
    @include screen((min-width: 1367px)) {
      width: 1280px;
    }
  }
*/

@mixin flexBox($flex: flex, $direction: row  ) {
  display: $flex;
  flex-direction: $direction;
  @content;
}
.dFlex {
  @include flexBox()
}
@mixin flexProps($justifyContent: center, $alignItem: center  ) {
  justify-content: $justifyContent;
  align-items: $alignItem;
  @content;
}


/*
----------Usage-----------
  .wrapper {
    @include flexBox() {
      width: 1280px;
    }
  }
*/

// Sass Functions
@function darkest( $color ) 	{ @return darken($color,20%); }
@function darker( $color ) 		{ @return darken($color,13.333%); }
@function dark( $color ) 		{ @return darken($color,6.667%); }
@function light( $color ) 		{ @return lighten($color,16.667%); }
@function lighter( $color ) 	{ @return lighten($color,33.333%); }
@function lightest( $color ) 	{ @return lighten($color,50%); }
/*
----------Usage-----------
  .wrapper {
    color: darker($red);
  }
*/
